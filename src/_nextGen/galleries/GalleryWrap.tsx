import React, { Dispatch, SetStateAction, useEffect, useState } from 'react';
import { BoxProps, forwardRef, useDisclosure } from '@chakra-ui/react';

import { ParsedImageData } from '../imagery';
import { GalleryModal } from '../imagery/ZoomModal';
import { Box } from '../primitives';

import {
  ImageColumns,
  ImageCarousel,
  Scroller,
  ImageGrid,
  ImageSlider,
  ImageLayout,
} from '.';

interface GalleryWrapProps extends BoxProps {
  imageArray: ParsedImageData[];
  galleryType:
    | 'carousel'
    | 'scroller'
    | 'imagecolumns'
    | 'testimonial'
    | 'imagelayout'
    | 'imagegrid'
    | 'imageslider';
  galleryName?: string;
  imageAlts?: boolean;
}

export type GalleryProps = {
  imageArray: ParsedImageData[];
  subType?: 'wide';
  setZoomTarget?: Dispatch<SetStateAction<number | null>>;
  className?: string | string[];
};

export const GalleryWrap = forwardRef<GalleryWrapProps, 'div'>(
  ({ imageArray, galleryName, galleryType, imageAlts = false }, ref) => {
    const [zoomTarget, setZoomTarget] = useState<number | null>(null);
    const { isOpen, onOpen, onClose } = useDisclosure();

    const closeHandler = () => {
      onClose();
      setZoomTarget(null);
    };

    useEffect(() => {
      if (zoomTarget !== null) {
        onOpen();
      }
    }, [zoomTarget, onOpen]);

    const galleryProps = {
      imageArray: imageArray,
      setZoomTarget: setZoomTarget,
      imageAlts: imageAlts,
    };

    // TODO:
    // keep 1 staggered scroller for lols, bin others
    // replace 'grid' with 'imagecolumns' and remove
    // remove 'widegrid' (it's cols anyways)
    // pass imageAlts down to show/hide autogenerated alt text/titles
    // Move back to grid, make more robust for outsized images.

    const galleries = {
      carousel: <ImageCarousel {...galleryProps} />, // only on playground, phased out
      scroller: <Scroller {...galleryProps} />, // only on playground, phased out

      imagecolumns: <ImageColumns {...galleryProps} />, // in imagetext which is used a lot
      imagegrid: <ImageGrid {...galleryProps} />, // Main gallery, similar to old, and shoot types gallery tabs
      imagelayout: <ImageLayout {...galleryProps} />, // new grid widget
      imageslider: <ImageSlider {...galleryProps} />, // New slider for mobile and zoomed? Might need different props.
      testimonial: <ImageSlider variant="testimonial" {...galleryProps} />, // slapped testimonial in a slider for now
    };

    return (
      <>
        <GalleryModal
          imageArray={imageArray}
          galleryName={galleryName}
          zoomTarget={zoomTarget}
          setZoomTarget={setZoomTarget}
          isOpen={isOpen}
          onOpen={onOpen}
          onClose={closeHandler}
        />
        <Box
          display={galleryName === 'Portrait Gallery' ? 'block' : ['none', 'block']}
          ref={ref}
          transition="all .2s"
          sx={{
            '&:hover .galleryImage:not(:hover)': { filter: 'grayscale(0.8)' },
          }}
        >
          {galleries[galleryType]}
        </Box>
        <Box display={galleryName === 'Portrait Gallery' ? 'none' : ['block', 'none']}>
          <ImageSlider imageArray={imageArray} />
        </Box>
      </>
    );
  },
);
